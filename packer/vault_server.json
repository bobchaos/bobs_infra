{
    "min_packer_version": "0.12.0",
    "variables": {
      "aws_region": "us-east-1",
      "vault_version": "1.6.0",
      "consul_module_version": "v0.8.0",
      "consul_version": "1.9.0",
      "consul_download_url": "{{env `CONSUL_DOWNLOAD_URL`}}",
      "vault_download_url": "{{env `VAULT_DOWNLOAD_URL`}}",
      "install_auth_signing_script": "true",
      "pgp_pubkey_path": null,
      "pgp_pubkey_name": null,
      "ca_public_key_path": null,
      "tls_public_key_path": null,
      "tls_private_key_path": null
    },
    "builders": [{
      "ami_name": "vault-consul-amazon-linux-2-{{isotime | clean_resource_name}}-{{uuid}}",
      "ami_description": "An Amazon Linux 2 AMI that has Vault and Consul installed.",
      "instance_type": "t2.micro",
      "name": "amazon-linux-2-ami",
      "region": "{{user `aws_region`}}",
      "type": "amazon-ebs",
      "source_ami_filter": {
        "filters": {
          "virtualization-type": "hvm",
          "architecture": "x86_64",
          "name": "*amzn2-ami-hvm-*",
          "block-device-mapping.volume-type": "gp2",
          "root-device-type": "ebs"
        },
        "owners": ["amazon"],
        "most_recent": true
      },
      "ssh_username": "ec2-user"
    }],
    "_comment": "My personal PGP key is baked in but a more flexible mechanism may be required to manage PGP keys for multiple users",
    "provisioners": [{
      "type": "shell",
      "inline": [
        "while [ -f /var/run/yum.pid ]; do sleep 2; done",
        "sudo yum install -y git",
        "git clone --branch v0.14.0 https://github.com/hashicorp/terraform-aws-vault.git /tmp/terraform-aws-vault",
        "if test -n \"{{user `vault_download_url`}}\"; then",
        " /tmp/terraform-aws-vault/modules/install-vault/install-vault --download-url {{user `vault_download_url`}};",
        "else",
        " /tmp/terraform-aws-vault/modules/install-vault/install-vault --version {{user `vault_version`}};",
        "fi"
      ]
    },{
      "type": "file",
      "source": "{{ user `pgp_pubkey_path`}}",
      "destination": "/tmp/{{ user `pgp_pubkey_name` }}"
    },{
      "type": "file",
      "source": "{{template_dir}}/auth/sign-request.py",
      "destination": "/tmp/sign-request.py"
    },{
      "type": "file",
      "source": "{{user `ca_public_key_path`}}",
      "destination": "/tmp/ca.crt.pem"
    },{
      "type": "file",
      "source": "{{user `tls_public_key_path`}}",
      "destination": "/tmp/vault.crt.pem"
    },{
      "type": "file",
      "source": "{{user `tls_private_key_path`}}",
      "destination": "/tmp/vault.key.pem"
  },{
      "type": "shell",
      "inline": [
        "if [[ '{{user `install_auth_signing_script`}}' == 'true' ]]; then",
        "sudo mv /tmp/sign-request.py /opt/vault/scripts/",
        "else",
        "sudo rm /tmp/sign-request.py",
        "fi",
        "sudo mkdir /opt/vault/pgp",
        "sudo mv /tmp/{{ user `pgp_pubkey_name` }} /opt/vault/pgp",
        "sudo mv /tmp/ca.crt.pem /opt/vault/tls/",
        "sudo mv /tmp/vault.crt.pem /opt/vault/tls/",
        "sudo mv /tmp/vault.key.pem /opt/vault/tls/",
        "sudo chown -R vault:vault /opt/vault/tls/",
        "sudo chmod -R 600 /opt/vault/tls",
        "sudo chmod 700 /opt/vault/tls",
        "sudo /tmp/terraform-aws-vault/modules/update-certificate-store/update-certificate-store --cert-file-path /opt/vault/tls/ca.crt.pem"
      ],
      "inline_shebang": "/bin/bash -e"
    },{
      "type": "shell",
      "inline": [
        "sudo yum install -y git",
        "if [[ '{{user `install_auth_signing_script`}}' == 'true' ]]; then",
        "sudo yum install -y python2-pip",
        "LC_ALL=C && sudo pip install boto3",
        "fi"
      ],
      "only": ["amazon-linux-2-ami"]
    },{
      "type": "shell",
      "inline": [
        "git clone --branch {{user `consul_module_version`}} https://github.com/hashicorp/terraform-aws-consul.git /tmp/terraform-aws-consul",
        "if test -n \"{{user `consul_download_url`}}\"; then",
        " /tmp/terraform-aws-consul/modules/install-consul/install-consul --download-url {{user `consul_download_url`}};",
        "else",
        " /tmp/terraform-aws-consul/modules/install-consul/install-consul --version {{user `consul_version`}};",
        "fi"
      ],
      "pause_before": "30s"
    },{
      "type": "shell",
      "inline": [
        "/tmp/terraform-aws-consul/modules/install-dnsmasq/install-dnsmasq"
      ]
    }]
  }